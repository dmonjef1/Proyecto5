{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gamer\\\\Desktop\\\\Proyecto5\\\\frontend\\\\src\\\\screens\\\\ProductScreen.js\",\n  _s = $RefreshSig$();\n/*\nimport { useEffect, useReducer } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from 'axios';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport Rating from '../components/Rating';\n*/\n\n/*\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'FETCH_REQUEST':\n            return { ...state, loading: true };\n        case 'FETCH_SUCCESS':\n            return { ...state, product: action.payload, loading: false };\n        case 'FETCH_FAIL':\n            return { ...state, loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nfunction ProductScreen() {\n    const params = useParams();\n    const { slug } = params;\n\n    const [{ loading, error, product }, dispatch] = useReducer(reducer, {\n\n        product: [],\n        loading: true,\n        error: '',\n    });\n\n    useEffect(() => {\n        const fetchData = async () => {\n            dispatch({ type: 'FETCH_REQUEST' });\n            try {\n                const result = await axios.get(`/products/:slug`);\n                dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n            } catch (err) {\n                dispatch({ type: 'FETCH_FAIL', payload: err.message });\n            }\n        };\n        fetchData();\n    }, [slug]);\n\n    return loading ? (\n        <div>Loading...</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n       <div>\n        <Row>\n            <Col md={6}>\n                <img className=\"img-large\"\n                src={product.image}\n                alt={product.name}\n                ></img>\n            </Col>\n            <Col md={3}></Col>\n            <Col md={3}></Col>\n        </Row>\n       </div>\n      );\n    }\n*/\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductScreen() {\n  _s();\n  const {\n    slug\n  } = useParams();\n  const [documentData, setDocumentData] = useState();\n  useEffect(() => {\n    const fetchDocumentData = async () => {\n      const res = await fetch(`http://localhost:5002/products/${slug}`);\n      const data = await res.json();\n      if (documentData === null || documentData.id !== data.id) {\n        setDocumentData(() => data);\n      }\n    };\n    fetchDocumentData();\n  }, [slug, documentData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: documentData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: documentData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: documentData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: documentData.price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: documentData.rating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: documentData.image,\n        alt: documentData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n_s(ProductScreen, \"PBCVJqVWkIjUvd0fdfKm+i0xly8=\", false, function () {\n  return [useParams];\n});\n_c = ProductScreen;\nexport default ProductScreen;\nvar _c;\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"names":["useState","useEffect","useParams","ProductScreen","slug","documentData","setDocumentData","fetchDocumentData","res","fetch","data","json","id","name","description","price","rating","image"],"sources":["C:/Users/Gamer/Desktop/Proyecto5/frontend/src/screens/ProductScreen.js"],"sourcesContent":["/*\nimport { useEffect, useReducer } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from 'axios';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport Rating from '../components/Rating';\n*/\n\n/*\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'FETCH_REQUEST':\n            return { ...state, loading: true };\n        case 'FETCH_SUCCESS':\n            return { ...state, product: action.payload, loading: false };\n        case 'FETCH_FAIL':\n            return { ...state, loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nfunction ProductScreen() {\n    const params = useParams();\n    const { slug } = params;\n\n    const [{ loading, error, product }, dispatch] = useReducer(reducer, {\n\n        product: [],\n        loading: true,\n        error: '',\n    });\n\n    useEffect(() => {\n        const fetchData = async () => {\n            dispatch({ type: 'FETCH_REQUEST' });\n            try {\n                const result = await axios.get(`/products/:slug`);\n                dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n            } catch (err) {\n                dispatch({ type: 'FETCH_FAIL', payload: err.message });\n            }\n        };\n        fetchData();\n    }, [slug]);\n\n    return loading ? (\n        <div>Loading...</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n       <div>\n        <Row>\n            <Col md={6}>\n                <img className=\"img-large\"\n                src={product.image}\n                alt={product.name}\n                ></img>\n            </Col>\n            <Col md={3}></Col>\n            <Col md={3}></Col>\n        </Row>\n       </div>\n      );\n    }\n*/\nimport {useState, useEffect } from \"react\"\nimport { useParams } from \"react-router-dom\";\n\nfunction ProductScreen(){\n    const {slug} = useParams();\n    \n    const [documentData, setDocumentData] = useState ();\n\n    useEffect(()=> {\n        const fetchDocumentData = async () => {\n            const res = await fetch (`http://localhost:5002/products/${slug}`)\n            const data = await res.json()\n            \n            if (documentData === null || documentData.id !== data.id) {\n                setDocumentData(() => data);\n              }\n        };\n        fetchDocumentData();\n    }, [slug, documentData]);\n    \n    return (\n        <div>\n          {documentData ? (\n            <div>\n              <h2>{documentData.name}</h2>\n              <p>{documentData.description}</p>\n              <p>{documentData.price}</p>\n              <p>{documentData.rating}</p>\n              <img src={documentData.image} alt={documentData.name}/>\n              \n            </div>\n          ) : (\n            <p>Loading...</p>\n          )}\n        </div>\n      );\n\n }\nexport default ProductScreen;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1C,SAASC,SAAS,QAAQ,kBAAkB;AAAC;AAE7C,SAASC,aAAa,GAAE;EAAA;EACpB,MAAM;IAACC;EAAI,CAAC,GAAGF,SAAS,EAAE;EAE1B,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,EAAG;EAEnDC,SAAS,CAAC,MAAK;IACX,MAAMM,iBAAiB,GAAG,YAAY;MAClC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAG,kCAAiCL,IAAK,EAAC,CAAC;MAClE,MAAMM,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;MAE7B,IAAIN,YAAY,KAAK,IAAI,IAAIA,YAAY,CAACO,EAAE,KAAKF,IAAI,CAACE,EAAE,EAAE;QACtDN,eAAe,CAAC,MAAMI,IAAI,CAAC;MAC7B;IACN,CAAC;IACDH,iBAAiB,EAAE;EACvB,CAAC,EAAE,CAACH,IAAI,EAAEC,YAAY,CAAC,CAAC;EAExB,oBACI;IAAA,UACGA,YAAY,gBACX;MAAA,wBACE;QAAA,UAAKA,YAAY,CAACQ;MAAI;QAAA;QAAA;QAAA;MAAA,QAAM,eAC5B;QAAA,UAAIR,YAAY,CAACS;MAAW;QAAA;QAAA;QAAA;MAAA,QAAK,eACjC;QAAA,UAAIT,YAAY,CAACU;MAAK;QAAA;QAAA;QAAA;MAAA,QAAK,eAC3B;QAAA,UAAIV,YAAY,CAACW;MAAM;QAAA;QAAA;QAAA;MAAA,QAAK,eAC5B;QAAK,GAAG,EAAEX,YAAY,CAACY,KAAM;QAAC,GAAG,EAAEZ,YAAY,CAACQ;MAAK;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAEnD,gBAEN;MAAA,UAAG;IAAU;MAAA;MAAA;MAAA;IAAA;EACd;IAAA;IAAA;IAAA;EAAA,QACG;AAGb;AAAC,GAlCOV,aAAa;EAAA,QACHD,SAAS;AAAA;AAAA,KADnBC,aAAa;AAmCtB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}