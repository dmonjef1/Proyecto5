{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gamer\\\\Desktop\\\\Proyecto5\\\\frontend\\\\src\\\\screens\\\\ProductScreen.js\",\n  _s = $RefreshSig$();\n/*\nimport { useEffect, useReducer } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from 'axios';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport Rating from '../components/Rating';\n*/\n\n/*\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'FETCH_REQUEST':\n            return { ...state, loading: true };\n        case 'FETCH_SUCCESS':\n            return { ...state, product: action.payload, loading: false };\n        case 'FETCH_FAIL':\n            return { ...state, loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nfunction ProductScreen() {\n    const params = useParams();\n    const { slug } = params;\n\n    const [{ loading, error, product }, dispatch] = useReducer(reducer, {\n\n        product: [],\n        loading: true,\n        error: '',\n    });\n\n    useEffect(() => {\n        const fetchData = async () => {\n            dispatch({ type: 'FETCH_REQUEST' });\n            try {\n                const result = await axios.get(`/products/:slug`);\n                dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n            } catch (err) {\n                dispatch({ type: 'FETCH_FAIL', payload: err.message });\n            }\n        };\n        fetchData();\n    }, [slug]);\n\n    return loading ? (\n        <div>Loading...</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n       <div>\n        <Row>\n            <Col md={6}>\n                <img className=\"img-large\"\n                src={product.image}\n                alt={product.name}\n                ></img>\n            </Col>\n            <Col md={3}></Col>\n            <Col md={3}></Col>\n        </Row>\n       </div>\n      );\n    }\n*/\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductScreen() {\n  _s();\n  const {\n    slug\n  } = useParams();\n  console.log(slug);\n  const [documentData, setDocumentData] = useState(null);\n  useEffect(() => {\n    const fetchDocumentData = async () => {\n      const res = await fetch(`http://localhost:5002/products/${slug}`);\n      const data = await res.json();\n      setDocumentData(data);\n    };\n    fetchDocumentData();\n  }, [slug]);\n  const {\n    name,\n    description,\n    price,\n    rating\n  } = documentData;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: rating\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductScreen, \"NQSt55Nv4CGDKn+xG6alN1YQGzo=\", false, function () {\n  return [useParams];\n});\n_c = ProductScreen;\nexport default ProductScreen;\nvar _c;\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"names":["useState","useEffect","useParams","ProductScreen","slug","console","log","documentData","setDocumentData","fetchDocumentData","res","fetch","data","json","name","description","price","rating"],"sources":["C:/Users/Gamer/Desktop/Proyecto5/frontend/src/screens/ProductScreen.js"],"sourcesContent":["/*\nimport { useEffect, useReducer } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from 'axios';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport Rating from '../components/Rating';\n*/\n\n/*\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'FETCH_REQUEST':\n            return { ...state, loading: true };\n        case 'FETCH_SUCCESS':\n            return { ...state, product: action.payload, loading: false };\n        case 'FETCH_FAIL':\n            return { ...state, loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nfunction ProductScreen() {\n    const params = useParams();\n    const { slug } = params;\n\n    const [{ loading, error, product }, dispatch] = useReducer(reducer, {\n\n        product: [],\n        loading: true,\n        error: '',\n    });\n\n    useEffect(() => {\n        const fetchData = async () => {\n            dispatch({ type: 'FETCH_REQUEST' });\n            try {\n                const result = await axios.get(`/products/:slug`);\n                dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n            } catch (err) {\n                dispatch({ type: 'FETCH_FAIL', payload: err.message });\n            }\n        };\n        fetchData();\n    }, [slug]);\n\n    return loading ? (\n        <div>Loading...</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n       <div>\n        <Row>\n            <Col md={6}>\n                <img className=\"img-large\"\n                src={product.image}\n                alt={product.name}\n                ></img>\n            </Col>\n            <Col md={3}></Col>\n            <Col md={3}></Col>\n        </Row>\n       </div>\n      );\n    }\n*/\nimport {useState, useEffect } from \"react\"\nimport { useParams } from \"react-router-dom\";\n\nfunction ProductScreen(){\n    const {slug} = useParams();\n    console.log(slug);\n    const [documentData, setDocumentData] = useState (null);\n\n    useEffect(()=> {\n        const fetchDocumentData = async () => {\n            const res = await fetch (`http://localhost:5002/products/${slug}`)\n            const data = await res.json()\n            setDocumentData(data)\n            \n        };\n        fetchDocumentData();\n    }, [slug]);\n    \n    const { name, description, price, rating } = documentData;\n    return (\n    <div>\n        <h2>{name}</h2>\n        <p>{description}</p>\n        <p>{price}</p>\n        <p>{rating}</p>\n    </div>\n    );\n\n }\nexport default ProductScreen;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1C,SAASC,SAAS,QAAQ,kBAAkB;AAAC;AAE7C,SAASC,aAAa,GAAE;EAAA;EACpB,MAAM;IAACC;EAAI,CAAC,GAAGF,SAAS,EAAE;EAC1BG,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACjB,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAE,IAAI,CAAC;EAEvDC,SAAS,CAAC,MAAK;IACX,MAAMQ,iBAAiB,GAAG,YAAY;MAClC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAG,kCAAiCP,IAAK,EAAC,CAAC;MAClE,MAAMQ,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;MAC7BL,eAAe,CAACI,IAAI,CAAC;IAEzB,CAAC;IACDH,iBAAiB,EAAE;EACvB,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;EAEV,MAAM;IAAEU,IAAI;IAAEC,WAAW;IAAEC,KAAK;IAAEC;EAAO,CAAC,GAAGV,YAAY;EACzD,oBACA;IAAA,wBACI;MAAA,UAAKO;IAAI;MAAA;MAAA;MAAA;IAAA,QAAM,eACf;MAAA,UAAIC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAK,eACpB;MAAA,UAAIC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK,eACd;MAAA,UAAIC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QACb;AAGT;AAAC,GAzBOd,aAAa;EAAA,QACHD,SAAS;AAAA;AAAA,KADnBC,aAAa;AA0BtB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}