{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gamer\\\\Desktop\\\\Proyecto5\\\\frontend\\\\src\\\\screens\\\\ProductScreen.js\",\n  _s = $RefreshSig$();\n/*\nimport { useEffect, useReducer } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from 'axios';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport Rating from '../components/Rating';\n*/\n\n/*\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'FETCH_REQUEST':\n            return { ...state, loading: true };\n        case 'FETCH_SUCCESS':\n            return { ...state, product: action.payload, loading: false };\n        case 'FETCH_FAIL':\n            return { ...state, loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nfunction ProductScreen() {\n    const params = useParams();\n    const { slug } = params;\n\n    const [{ loading, error, product }, dispatch] = useReducer(reducer, {\n\n        product: [],\n        loading: true,\n        error: '',\n    });\n\n    useEffect(() => {\n        const fetchData = async () => {\n            dispatch({ type: 'FETCH_REQUEST' });\n            try {\n                const result = await axios.get(`/products/:slug`);\n                dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n            } catch (err) {\n                dispatch({ type: 'FETCH_FAIL', payload: err.message });\n            }\n        };\n        fetchData();\n    }, [slug]);\n\n    return loading ? (\n        <div>Loading...</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n       <div>\n        <Row>\n            <Col md={6}>\n                <img className=\"img-large\"\n                src={product.image}\n                alt={product.name}\n                ></img>\n            </Col>\n            <Col md={3}></Col>\n            <Col md={3}></Col>\n        </Row>\n       </div>\n      );\n    }\n*/\nimport { useReducer } from \"react\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { app, client } from \"../../../backend/server.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return {\n        ...state,\n        loading: true\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        product: action.payload,\n        loading: false\n      };\n    case 'FETCH_FAIL':\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\nfunction ProductScreen() {\n  _s();\n  const [{\n    loading,\n    error,\n    product\n  }] = useReducer(reducer, {\n    product: [],\n    loading: true,\n    error: ''\n  });\n  app.get('/products', async function (req, res) {\n    try {\n      await client.connect();\n      const documentos = client.db(\"Productos\").collection(\"products\");\n      const docs = await documentos.find({}).toArray();\n      res.json(docs);\n    } catch (err) {\n      console.log(err);\n      res.status(500).json({\n        error: \"Server error\"\n      });\n    }\n  });\n  app.get('/products/:slug', async function (req, res) {\n    try {\n      await client.connect();\n      const documentos = client.db(\"Productos\").collection(\"products\");\n      const docs = await documentos.find({\n        slug: req.params.slug\n      }).toArray();\n      res.json(docs);\n    } catch (err) {\n      console.log(err);\n      res.status(500).json({\n        error: \"Server error\"\n      });\n    }\n  });\n  return loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img-large\",\n          src: product.image,\n          alt: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 4\n  }, this);\n}\n_s(ProductScreen, \"UKQcFjeNEfFe7+7ZavV15PhqaxY=\");\n_c = ProductScreen;\nexport default ProductScreen;\nvar _c;\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"names":["useReducer","Row","Col","app","client","reducer","state","action","type","loading","product","payload","error","ProductScreen","get","req","res","connect","documentos","db","collection","docs","find","toArray","json","err","console","log","status","slug","params","image","name"],"sources":["C:/Users/Gamer/Desktop/Proyecto5/frontend/src/screens/ProductScreen.js"],"sourcesContent":["/*\nimport { useEffect, useReducer } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from 'axios';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport Rating from '../components/Rating';\n*/\n\n/*\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'FETCH_REQUEST':\n            return { ...state, loading: true };\n        case 'FETCH_SUCCESS':\n            return { ...state, product: action.payload, loading: false };\n        case 'FETCH_FAIL':\n            return { ...state, loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nfunction ProductScreen() {\n    const params = useParams();\n    const { slug } = params;\n\n    const [{ loading, error, product }, dispatch] = useReducer(reducer, {\n\n        product: [],\n        loading: true,\n        error: '',\n    });\n\n    useEffect(() => {\n        const fetchData = async () => {\n            dispatch({ type: 'FETCH_REQUEST' });\n            try {\n                const result = await axios.get(`/products/:slug`);\n                dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n            } catch (err) {\n                dispatch({ type: 'FETCH_FAIL', payload: err.message });\n            }\n        };\n        fetchData();\n    }, [slug]);\n\n    return loading ? (\n        <div>Loading...</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n       <div>\n        <Row>\n            <Col md={6}>\n                <img className=\"img-large\"\n                src={product.image}\n                alt={product.name}\n                ></img>\n            </Col>\n            <Col md={3}></Col>\n            <Col md={3}></Col>\n        </Row>\n       </div>\n      );\n    }\n*/\nimport {useReducer } from \"react\"\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport{ app, client} from \"../../../backend/server.js\"\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'FETCH_REQUEST':\n            return { ...state, loading: true };\n        case 'FETCH_SUCCESS':\n            return { ...state, product: action.payload, loading: false };\n        case 'FETCH_FAIL':\n            return { ...state, loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\nfunction ProductScreen (){\n    const [{ loading, error, product }] = useReducer(reducer, {\n\n        product: [],\n        loading: true,\n        error: '',\n    });\n\napp.get( '/products', async function ( req, res ) {\n    try{\n      await client.connect()\n      const documentos= client.db (\"Productos\").collection(\"products\")\n      const docs = await documentos.find({}).toArray()\n      res.json(docs)\n    } catch (err){\n      console.log( err);\n      res.status(500).json({error: \"Server error\"})\n    }\n  });\n\napp.get( '/products/:slug', async function ( req, res ) {\n    try{\n      await client.connect()\n      const documentos= client.db (\"Productos\").collection(\"products\")\n      const docs = await documentos.find({slug:req.params.slug}).toArray()\n      res.json(docs)\n    } catch (err){\n      console.log( err);\n      res.status(500).json({error: \"Server error\"})\n    }\n  });\n  return loading ? (\n    <div>Loading...</div>\n  ) : error ? (\n    <div>{error}</div>\n  ) : (\n   <div>\n    <Row>\n        <Col md={6}>\n            <img className=\"img-large\"\n            src={product.image}\n            alt={product.name}\n            ></img>\n        </Col>\n        <Col md={3}></Col>\n        <Col md={3}></Col>\n    </Row>\n   </div>\n  );\n}\n\n\nexport default ProductScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}